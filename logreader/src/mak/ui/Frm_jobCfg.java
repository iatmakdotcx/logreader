/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mak.ui;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import mak.tools.StringUtil;
import mak.triPart.zk;

/**
 *
 * @author Chin
 */
public class Frm_jobCfg extends javax.swing.JFrame {
    private zk zkClient = new zk();
    /**
     * Creates new form Frm_jobCfg
     */
    public Frm_jobCfg() {
        initComponents();        
        zkClient.initCfg("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(130, 44));
        jToolBar1.setMinimumSize(new java.awt.Dimension(130, 44));
        jToolBar1.setPreferredSize(new java.awt.Dimension(130, 44));

        jButton3.setText("Load");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton2.setText("Add");
        jButton2.setToolTipText("");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton1.setText("edit");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton4.setText("Delete");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "key", "name", "src", "dst"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(18);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private Object[][] getModelData() {
//        Object [][]  res = new Object [][] {
//                {1, 2, 3, 4},
//                {'a', "b", "c", "d"},
//            };
        String jobStr = zkClient.getPathValue("/mak/DBlog/jobs");
        String[] jobKeys = jobStr.split(",");

        //Object[][] res = new Object[jobKeys.length][4];
        ArrayList<Object[]> aloArr = new ArrayList<>();
        
        for (int i = 0; i < jobKeys.length; i++) {
            String key = jobKeys[i];
            if (key.isEmpty()) {
				continue;
			}
            Object[] res = new Object[4];
            res[0] = key ;
            String ConstrPath = "/mak/DBlog/config/" + key + "/CONSTR";
            String ConStr = zkClient.getPathValue(ConstrPath);
            String srcStr = StringUtil.getXmlValueFromStr(ConStr, "src");
            String dstStr = StringUtil.getXmlValueFromStr(ConStr, "dst");
            String cfgStr = StringUtil.getXmlValueFromStr(ConStr, "cfg");
            res[1] = StringUtil.getXmlValueFromStr(cfgStr, "JobName"); 
            res[2] = StringUtil.getXmlValueFromStr(srcStr, "host")+"%"+StringUtil.getXmlValueFromStr(srcStr, "dbName"); 
            res[3] = StringUtil.getXmlValueFromStr(dstStr, "host")+"%"+StringUtil.getXmlValueFromStr(dstStr, "dbName"); 
            aloArr.add(res);
        }
        return aloArr.toArray(new Object[0][4]);
    }
    public void SetTableViewData() {
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                getModelData(),
                new String[]{
                    "key", "name", "src", "dst"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Frm_AddJob fAddJob = new Frm_AddJob();
        fAddJob.singleMode = true;
        fAddJob.setModal(true);
        fAddJob.setVisible(true);
        
        if (fAddJob.ModalResult == 1) {
            StringBuilder sbsbsb = new StringBuilder(); 
            sbsbsb.append("<root>");
            sbsbsb.append("<src>");
            sbsbsb.append(fAddJob.ConStrSrc);
            sbsbsb.append("</src>");
            sbsbsb.append("<dst>");
            sbsbsb.append(fAddJob.ConStrDst);
            sbsbsb.append("</dst>");
            sbsbsb.append("<cfg>");
            sbsbsb.append(fAddJob.CfgStr);
            sbsbsb.append("</cfg>");
            sbsbsb.append("</root>");
            
            String key = getssssStr();
            String ConstrPath = "/mak/DBlog/config/" + key + "/CONSTR";
            zkClient.setPathValue(ConstrPath, sbsbsb.toString());
            
            String jobStr = zkClient.getPathValue("/mak/DBlog/jobs");
            if(jobStr.isEmpty()){
                jobStr = key;
            }else{
                jobStr += ","+key;
            }
            zkClient.setPathValue("/mak/DBlog/jobs", jobStr);
            SetTableViewData();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private String getssssStr(){
        DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
        Date date = new Date();
        return format.format(date);
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SetTableViewData();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(JOptionPane.showConfirmDialog(null, "确认删除吗?", "确认", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            String key = (String)jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0);
            String jobStr = zkClient.getPathValue("/mak/DBlog/jobs");
            String[] jobKeys = jobStr.split(",");
            String NewjobStr = "";
            for (String jobKey : jobKeys) {
                if (!jobKey.equals(key)) {
                    NewjobStr += ","+jobKey;
                }
            }
            if (!NewjobStr.isEmpty()) {
            	NewjobStr = NewjobStr.substring(1);
			}
            zkClient.setPathValue("/mak/DBlog/jobs",NewjobStr);        
            zkClient.deletePath("/mak/DBlog/config/" + key);
            SetTableViewData();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String key = (String)jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0);
        String ConstrPath = "/mak/DBlog/config/" + key + "/CONSTR";
        String ConStr = zkClient.getPathValue(ConstrPath);
        String srcStr = StringUtil.getXmlValueFromStr(ConStr, "src");
        String dstStr = StringUtil.getXmlValueFromStr(ConStr, "dst");
        String cfgStr = StringUtil.getXmlValueFromStr(ConStr, "cfg");
        Frm_AddJob fAddJob = new Frm_AddJob();
        fAddJob.singleMode = true;
        fAddJob.setModal(true);
        fAddJob.CfgStr = cfgStr;
        fAddJob.ConStrSrc =srcStr;
        fAddJob.ConStrDst = dstStr;
        fAddJob.setVisible(true);
        
        if (fAddJob.ModalResult == 1) {
            StringBuilder sbsbsb = new StringBuilder(); 
            sbsbsb.append("<root>");
            sbsbsb.append("<src>");
            sbsbsb.append(fAddJob.ConStrSrc);
            sbsbsb.append("</src>");
            sbsbsb.append("<dst>");
            sbsbsb.append(fAddJob.ConStrDst);
            sbsbsb.append("</dst>");
            sbsbsb.append("<cfg>");
            sbsbsb.append(fAddJob.CfgStr);
            sbsbsb.append("</cfg>");
            sbsbsb.append("</root>");
            
            zkClient.setPathValue(ConstrPath, sbsbsb.toString());
            SetTableViewData();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
